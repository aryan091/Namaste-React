                                TESTING
Types of Testing ( Developer )
- Unit Testing - Developer test the component in Isolation - Single Component
- Integration Testing - Multiple Components 
- End to End Testing ( e2e Testing )  - Test all the flows

REACT TESTING LIBRARY  uses JEST

Jest is a delightful JavaScript Testing Framework with a focus on simplicity.
It works with projects using: Babel, TypeScript, Node, React, Angular, Vue and more!

REACT TESTING LIBRARY - https://testing-library.com/docs/react-testing-library/intro/
JEST - https://jestjs.io/

Setting Up testing in our app
- Install React Testing Library
- Install Jest
- Install Babel Dependencies
- Configure Babel 
- Configure Parcel config file to disable default Babel Transpilation - https://parceljs.org/languages/javascript/#babel
- Jest Configuration - npx jest --init - https://jestjs.io/docs/getting-started
- Install JsDom Library - npm install --save-dev jest-environment-jsdom - https://testing-library.com/docs/react-testing-library/setup#jest-28

Parcel already uses `Babel` and it has its own configuration for Babel

So we will have a conflict with Parcel.So we will have to change parcel behavior

When you run - `npm run test`
if you will get that output - No tests found, exiting with code 1 

Congratulation you have successfully configured  React Testing Library - Jest - Babel - Parcel

JS-DOM - Jsdom is a JavaScript implementation of the WHATWG DOM and HTML standards, for use with Node.js. It provides a way to create and manipulate a virtual DOM in Node.js, which can be useful for testing, scraping, and other purposes.

Testing Environment


For writing test cases we have to first make a folder named '__tests__' in our app